@{
  Layout = "_Layout";
}

@model ToDoList.Models.Item

<h4>Add a new task</h4>
@* 
This HtmlHelper returns HTML markup for a validation-error message for specific model properties (CategoryId).
The first argument is whatever property the validation message is for.
The second argument is an empty string if there are no errors but it's replaced by error-message set in [Range()] if there is an error.
 *@
<p>@Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger", @style = "font-weight: 600;"})</p>
<p>@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", @style = "font-weight: 600;"})</p>

@using (Html.BeginForm())
{
  @Html.LabelFor(model => model.Description)
  @Html.TextBoxFor(model => model.Description)

  @Html.LabelFor(model => model.Category) //label is for item.Category property 
  @Html.DropDownList("CategoryId") // selectList (db.Catergories, "categoryId", "categoryName") displays the category property but actually is reference to Category object(row)

  <input type="submit" value="Add new item" class="btn btn-default" />
}
<p><strong>NOTE:</strong> You need to have at least one category before you can add an item!</p>
<p>Go to @Html.ActionLink("this page", "Create", "Categories") to create a category.</p>

<p>@Html.ActionLink("Show all items", "Index")</p>